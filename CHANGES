-   v0.3.1 Mon May 14 16:12:58 UTC 2018

    Odd, TEST_REQUIRES includes Test::Deep:

            TEST_REQUIRES =>
            {
                qw
                (
                    lib     0
                    strict  0
                    version 0

                    Archive::Tar            0
                    File::Basename          0
                    File::Find              0
                    File::Spec::Functions   0
                    File::Temp              0
                    FindBin                 0
                    List::MoreUtils         0
                    Symbol                  0
        *           Test::Deep              0
                    Test::More              0
                ),
                $mod2ver->
                (
                    [ qw( Cwd                               v3.73.0 ) ],
                    [ qw( List::Util                        v1.46.0 ) ],
                    [ qw( File::Copy::Recursive::Reduced    v0.6.0  ) ],
                )
            },

    but this fails for lack of "Test::Deep" on a number of platforms.
    The module is not used until testing, nothing blows up during
    configuration.

    The directive seems to be processed:

        x_TEST_REQUIRES:
          Archive::Tar: '0'
          Cwd: '3.073000'
          File::Basename: '0'
          File::Copy::Recursive::Reduced: '0.002000'
          File::Find: '0'
          File::Spec::Functions: '0'
          File::Temp: '0'
          FindBin: '0'
          List::MoreUtils: '0'
          List::Util: '1.046000'
          Symbol: '0'
      *   Test::Deep: '0'
          Test::More: '0'
          lib: '0'
          strict: '0'
          version: '0'

    Not sure what this means...
    Hacking the Makefile.pl to include "test_requires", add a few
    additional tests for "require_ok" into t/00*.t.


-   v0.3.0  Wed May  9 09:11:35 CDT 2018

    Bump version number to try and find out why this fails for
    lack of a module that isn't required. Failure notices call
    out File::Copy::Recursive, which is not used in the Makefile.PL,
    module, or test code. File::Copy::Recursive is not installed 
    here and the tests all pass... but the tests fail for lack of
    it on the smoke systems. Only thing I can figure is that they
    are testing a stale copy of the module. Hopefully bumping the
    version will solve the issue.

    Add test to use File::Find to walk down the tree grep-ing
    "File::Copy::Recursive" and dumping the result along with 
    the module version to try and see what is going on.
>>>>>>> e23d2607524f4f5353ebb75870f9af8cf1b05452

-   v0.22.1 Fri May  4 21:05:12 UTC 2018

    Change version dir test to simply existing with matching
    basename to avoid issues with volume and path manglement
    on Windows.

    Still no idea why pre-5.22 fails with compile error.

-   v0.22.0 Wed May  2 12:16:00 CDT 2018

    Break up find call into separate blocks to find out why
    5.20 blows up with it; 5.26 is entirely happy.

    File::Copy::Recursive may still have problems; revert to 
    File::Copy::Recursive::Reduced.

-   v0.21.0 Mon Apr 30 15:14:58 CDT 2018

    Repair Makefile.PL, version spec's lost in the 
    regression at v0.20.

-   v0.20.1  Fri Apr 27 18:47:30 CDT 2018

    Makefile.PL cleanups.

-   v0.20.0  Thu Apr 26 22:45:15 CDT 2018

    Bump version.

-   v0.11   Tue Apr 24 17:34:45 CDT 2018

    Add back file-based tests for a variety of version 
    strings.

    Replace join on '/' with File::Spec::Functions to allow
    use on systems with volumes -- anyone with VMS kindly 
    test this for me.

    Removed anything git-ish from the module & tests.

-   v0.10  Sun Apr 22 19:08:47 CDT 2018

    There is simply no way to get a consistent shell interface to 
    git across different platforms; every fix for one breaks another.
    Going back to the original approach of supporting only the 
    perl-version dir's, which has reliably worked throughout.

-   v0.0.1  Sun Feb 18 14:19:59 CST 2018

    Initial kwikhak... ah... er... "relase", yes,
    that's the word release.
